Traceback (most recent call last):
  File "C:\Users\acruzp\Miniconda3\envs\reporte_ubidots\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\acruzp\Miniconda3\envs\reporte_ubidots\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\acruzp\Miniconda3\envs\reporte_ubidots\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\acruzp\Miniconda3\envs\reporte_ubidots\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\acruzp\Miniconda3\envs\reporte_ubidots\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\acruzp\Miniconda3\envs\reporte_ubidots\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\acruzp\Miniconda3\envs\reporte_ubidots\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\acruzp\Miniconda3\envs\reporte_ubidots\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%load_ext autoreload
%autoreload 2

from Ubidots_library_acruz import Ubidots

import warnings
warnings.filterwarnings("ignore")

import pandas as pd
import numpy as np
from datetime import datetime

import os
from dotenv import dotenv_values
config = dotenv_values(".env")

import requests
import json

from matplotlib import pyplot as plt
from matplotlib.colors import LinearSegmentedColormap
from matplotlib.ticker import PercentFormatter
import seaborn as sns


from sys import exit

import os

import plotly.io as pio
import plotly.graph_objects as go
import plotly.express as px
import plotly.offline as py
from plotly.subplots import make_subplots

pio.renderers.default = "notebook"

import config as cfg
import Report_library as Report
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mKeyError[0m                                  Traceback (most recent call last)
Input [1;32mIn [1][0m, in [0;36m<cell line: 39>[1;34m()[0m
[0;32m     36[0m pio[38;5;241m.[39mrenderers[38;5;241m.[39mdefault [38;5;241m=[39m [38;5;124m"[39m[38;5;124mnotebook[39m[38;5;124m"[39m
[0;32m     38[0m [38;5;28;01mimport[39;00m [38;5;21;01mconfig[39;00m [38;5;28;01mas[39;00m [38;5;21;01mcfg[39;00m
[1;32m---> 39[0m [38;5;28;01mimport[39;00m [38;5;21;01mReport_library[39;00m [38;5;28;01mas[39;00m [38;5;21;01mReport[39;00m

File [1;32mD:\OneDrive - CELSIA S.A E.S.P\Proyectos\Eficiencia_Energetica\Homecenter\informe_homecenter\Report_library.py:18[0m, in [0;36m<module>[1;34m[0m
[0;32m     14[0m [38;5;66;03m# Base configuration -----------------------------------------------------------[39;00m
[0;32m     15[0m 
[0;32m     16[0m [38;5;66;03m# Ubidots API[39;00m
[0;32m     17[0m API_URL [38;5;241m=[39m cfg[38;5;241m.[39mAPI_URL
[1;32m---> 18[0m _TOKEN: [38;5;28mstr[39m [38;5;241m=[39m [43mos[49m[38;5;241;43m.[39;49m[43menviron[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mtoken[39;49m[38;5;124;43m"[39;49m[43m][49m
[0;32m     20[0m LST_VAR_FIELDS [38;5;241m=[39m cfg[38;5;241m.[39mLST_VAR_FIELDS
[0;32m     21[0m LST_HEADERS [38;5;241m=[39m cfg[38;5;241m.[39mLST_HEADERS

File [1;32m~\Miniconda3\envs\reporte_ubidots\lib\os.py:679[0m, in [0;36m_Environ.__getitem__[1;34m(self, key)[0m
[0;32m    676[0m     value [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_data[[38;5;28mself[39m[38;5;241m.[39mencodekey(key)]
[0;32m    677[0m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m:
[0;32m    678[0m     [38;5;66;03m# raise KeyError with the original key value[39;00m
[1;32m--> 679[0m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key) [38;5;28;01mfrom[39;00m [38;5;28mNone[39m
[0;32m    680[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mdecodevalue(value)

[1;31mKeyError[0m: 'token'
KeyError: 'token'

